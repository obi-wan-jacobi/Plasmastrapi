
known issues:
- TBD

user experience:
- (legacy) terminals are selectable when the circuit element is inside a selection-box

needs testing:
- TBD

in progress:
- overhaul

overhaul:
- circuits
	- WireElement to inherit from CircuitElement
	- factories
- game
	- refactor compatibility decorations
- ui
	- factories
		- builder/decorators
	- Refactor such that panel content/child positions are relative to parent (percent-based or position-based)
		- ViewportSystem to listen for screen resize events?
	- Modal panels (move, stretch/resize, close)

tech debt:
-general
	- refactor main engine loop into load/unload blocks
	- dictionaries should validate type for key as well as value
	- mixin superclass
	- run memory analysis/profiler diagnostics
	- JSDocs/automated documentation
	- unit tests
- optimization
	- meshhandle point-collision checking is disgusting
	- tool compatibility filtering --> sort pickable components using a tree?
	- MeshComponent --> combine translate + rotate into one function (leverage a single for-loop)?
	- Dictionary --> store this.__end to avoid O(n) for this.add
	- Mouse/Keyboard/Pick system 'inputBuffer' consolidation into a single LoopOnce-->forEach
	- entity destruction (EmitterContainer --> destroyed entities unsubscribe from their own components, etc.)
- potential scalability concerns
	- single-canvas viewport

backlog:
- general
	- resize with window
- game menu
	- UI panels
	- menu buttons with text labels 
- lab scene
	- scenario window
		- zoom in/out
		- environment
		- events	
	- design editor
		- wire 'draw-cutting'
		- confine circuit elements to design area
			- highlight/outline selected tool
		- copy/paste
		- rotatable components
		- save/load design
		- undo/redo
		- wire routing
	- circuit testing ('debug' mode)
		- pause/stop/play
		- breakpoints?
		- step forward/backward
		- sliding global timer (signal propagation speed)
	- elements
		- flip flops (x3)
		- timers
		- SOCs + design contexts (tabs? overlay? panels?)
- config
	- scenes

technology/resources:
- linting
	- ESlint (http://eslint.org/)
	- intellisense typings (vscode)
- unit tests
	- jasmine
	- travis CI (https://docs.travis-ci.com/user/languages/javascript-with-nodejs)
- grunt
- bower
- npm
- node
- mongo
- projectz for readme files (https://github.com/bevry/projectz)

resources:
- traits and mixins (https://howtonode.org/traitsjs)
- mixins (https://javascriptweblog.wordpress.com/2011/05/31/a-fresh-look-at-javascript-mixins/)
- http://logic.ly/demo/
- http://www.starscenesoftware.com/vectrosity.html
